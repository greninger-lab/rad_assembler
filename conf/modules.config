/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GENBANK_TO_FASTA {
        publishDir = [
            path: { "${params.outdir}/genbank_to_fasta" },
            mode: params.publish_dir_mode,
            pattern: "*.fasta"
        ]
    }  

    withName: PROKKA_GENBANK_TO_FASTA_DB {
        publishDir = [
            path: { "${params.outdir}/prokka_genbank_to_fasta_db" },
            mode: params.publish_dir_mode,
            pattern: "*.faa"
        ]
    }

    withName: BOWTIE2_BUILD_REFERENCE {
        publishDir = [
            path: { "${params.outdir}/bowtie2_ref" },
            mode: params.publish_dir_mode
        ]
    }    

    withName: BWA_INDEX {
        publishDir = [
            path: { "${params.outdir}/bwa_index_ref" },
            mode: params.publish_dir_mode
        ]
    }    

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BOWTIE2_ALIGN' {
        ext.args = '--local --very-sensitive-local --seed 1'
        ext.args2 = '-F4 -bhS'
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { "${params.outdir}/bowtie2" },
            mode: params.publish_dir_mode,
            pattern: "*.sorted.bam"
        ]
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.sorted.bam" }
        publishDir = [
            path: { "${params.outdir}/bowtie2/samtools_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{stats,flagstat,idxstats}"
        ]
    }

    withName: SPADES {
        ext.args = '--careful'
        publishDir = [
            path: { "${params.outdir}/spades" },
            mode: params.publish_dir_mode,
            pattern: "*.{gz,log}"
        ]
    }   

    withName: MUGSY {
        publishDir = [
            path: { "${params.outdir}/mugsy" },
            mode: params.publish_dir_mode,
            pattern: "*{nonzero_ref.maf,.log}"
        ]
    }

    withName: LAST_MAFCONVERT {
        ext.prefix = { "${meta.id}_aligned_scaffolds_nonzero_ref" }
        ext.args = '-d'
    }      

    withName: SAMTOOLS_VIEW_ALIGNED {
        ext.prefix = { "${meta.id}_aligned_scaffolds_nonzero_ref" }
        ext.args = '-bS --output-fmt bam'
        publishDir = [
            path: { "${params.outdir}/samtools_scaffold_view" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
    }   

    withName: SAMTOOLS_SORT_ALIGNED {
        ext.prefix = { "${meta.id}_aligned_scaffolds_nonzero_ref_sorted" }
        publishDir = [
            path: { "${params.outdir}/samtools_scaffold_sort" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
    }

    withName: MAKE_REFERENCE {
        errorStrategy = 'ignore'
        publishDir = [
            path: { "${params.outdir}/make_reference" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta}"
        ]
    }

    withName: BOWTIE2_BUILD_NEW_REFERENCE {
        publishDir = [
            path: { "${params.outdir}/bowtie2_new_ref" },
            mode: params.publish_dir_mode
        ]
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2_NEW_REF:BOWTIE2_ALIGN' {
        ext.args = '--local --very-sensitive-local --seed 1'
        ext.args2 = '-F4 -bhS'
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2_NEW_REF:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.new_ref.sorted" }
        publishDir = [
            path: { "${params.outdir}/bowtie2_new_ref" },
            mode: params.publish_dir_mode,
            pattern: "*.sorted.bam"
        ]
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2_NEW_REF:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.new_ref.sorted.bam" }
        publishDir = [
            path: { "${params.outdir}/bowtie2_new_ref/samtools_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{stats,flagstat,idxstats}"
        ]
    }

    withName: GENERATE_CONSENSUS {
        publishDir = [
            path: { "${params.outdir}/generate_consensus" },
            mode: params.publish_dir_mode,
            pattern: "*{final_consensus.fasta,.csv}"
        ]
    }

    withName: PROKKA {
        publishDir = [
            path: { "${params.outdir}/prokka" },
            mode: params.publish_dir_mode,
        ]        
    }

	withName: SUMMARY {
		publishDir =[
			path: { "${params.outdir}/summary" },
			mode: params.publish_dir_mode,
			pattern: "*.summary.tsv"
		]
	}

	withName: CLEANUP {
		publishDir = [
			path: { "${params.outdir}" },
			mode: params.publish_dir_mode,
			pattern: "*summary.tsv"
		]
	}
    
    if (!params.skip_fastqc) {
        process {
            withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
                ext.args = '--quiet'
                publishDir = [
                    path: { "${params.outdir}/fastqc/raw" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }

    if (!params.skip_fastp) {
        process {
            withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTP' {
                ext.args = "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 20 --length_required ${params.trim_len}"
                publishDir = [
                    [
                        path: { "${params.outdir}/fastp" },
                        mode: params.publish_dir_mode,
                        pattern: "*.{json,html}"
                    ],
                    [
                        path: { "${params.outdir}/fastp/log" },
                        mode: params.publish_dir_mode,
                        pattern: "*.log"
                    ],
                    [
                        path: { "${params.outdir}/fastp" },
                        mode: params.publish_dir_mode,
                        pattern: "*.fail.fastq.gz",
                        enabled: params.save_trimmed_fail
                    ]
                ]
            }
        }

        if (!params.skip_fastqc) {
            process {
                withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
                    ext.args = '--quiet'
                    publishDir = [
                        path: { "${params.outdir}/fastqc/trim" },
                        mode: params.publish_dir_mode,
                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                    ]
                }
            }
        }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
